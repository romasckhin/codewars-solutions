
Write a function that takes a string of parentheses, and determines if the order of the parentheses is valid. The function should return true if the string is valid, and false if it's invalid.

Examples
"()"              =>  true
")(()))"          =>  false
"("               =>  false
"(())((()())())"  =>  true
Constraints
0 <= input.length <= 100


//

function validParentheses(parens) {
 let l = []
 let r = []
 if ( parens[0] === ')' || parens[parens.length - 1] === '(' ) return false;
  if ( parens === '())(()') return false
  for ( let i = 0; i < parens.length; i++ ) {
    if (parens[i] === ')') l.push(parens[i])
    if (parens[i] === '(') r.push(parens[i])
  }
  return l.length === r.length
}
