Given a string, turn each character into its ASCII character code and join them together to create a number - let's call this number total1:

'ABC' --> 'A' = 65, 'B' = 66, 'C' = 67 --> 656667
Then replace any incidence of the number 7 with the number 1, and call this number 'total2':

total1 = 656667
              ^
total2 = 656661
              ^
Then return the difference between the sum of the digits in total1 and total2:

  (6 + 5 + 6 + 6 + 6 + 7)
- (6 + 5 + 6 + 6 + 6 + 1)
-------------------------
                       6
                       
                       
  // 
  function calc(x){
  
  let arr = []
  for ( let i = 0; i < x.length; i++ ) {
      arr.push(x[i].charCodeAt(x[i]))
  }
  let fil = arr.filter( (el) => !Number.isNaN( el ) );
  
  let str = fil.join('')
  let sum1 = str.split('').reduce((acc,crr) => +acc + +crr)
  for ( let i = 0; i < str.length; i++ ) {
    str = str.replace(7,1)
  }
    let sum2 = str.split('').reduce((acc,crr) => +acc + +crr)
    return sum1 - sum2
 }
