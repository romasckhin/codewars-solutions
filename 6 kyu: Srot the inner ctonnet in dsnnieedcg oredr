
You have to sort the inner content of every word of a string in descending order.

The inner content is the content of a word without first and the last char.

Some examples:

"sort the inner content in descending order"  -->  "srot the inner ctonnet in dsnnieedcg oredr"
"wait for me"        -->  "wiat for me"
"this kata is easy"  -->  "tihs ktaa is esay"
Words are made up of lowercase letters and are separated by a single space. There will be no leading/trailing spaces.

The string will never be null and will never be empty. In C/C++ the string is always nul-terminated.

Have fun coding it and please don't forget to vote and rank this kata! :-)

I have also created other katas. Take a look if you enjoyed this kata!


//

  let arr = words.split(' ')
  
  let result = []
  
  let z = []
  
  for ( let i = 0; i < arr.length; i++ ) {
    
      for ( let k = 0; k < arr.length; k++) {
        
        if (arr[k].length > 1) {
        
            result.push(arr[k][0] + arr[k].slice(1,-1).split('').sort().reverse() + arr[k][arr[k].length - 1]);
        }
        else {
          result.push(arr[k])
        }
        } 
   
      result.filter(el => z.push(el.replace(/[\s.,%]/g, '')))
    
    break
    
  }
  
 return z.join(' ')

}
